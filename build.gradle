plugins {
    id 'groovy'
    id 'maven-publish'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.cadixdev.licenser' version '0.6.1'
}

static String getGitCommit() {
    def proc = 'git rev-parse --short HEAD'.execute()
    proc.waitFor()
    return proc.exitValue()? "ERROR(${proc.exitValue()})" : proc.text.trim()
}

def groovy(def name) {
    return [
            group: 'org.codehaus.groovy',
            name: name == 'stdlib'? 'groovy' : "groovy-${name}",
            version: project.ext.groovyVersion,
            classifier: 'indy'
    ]
}

version = '1.0.0'
group = 'net.thesilkminer.mc.austinpowers'
archivesBaseName = 'austin-powers-language-provider-keeping-it-groovy-baby'

java {
    toolchain.languageVersion = JavaLanguageVersion.of(JavaVersion.VERSION_16.majorVersion)
}

license {
    header(project.file('NOTICE'))

    ext['year'] = Calendar.getInstance().get(Calendar.YEAR)
    ext['name'] = 'TheSilkMiner'
    ext['app'] = 'APLP: KIGB'
}

minecraft {
    mappings channel: 'official', version: '1.17.1'

    runs {
        client {
            workingDirectory project.file('run_client')

            property 'forge.logging.console.level', 'debug'

            mods {
                austinpowerslanguageproviderkeepingitgroovybaby {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run_server')

            property 'forge.logging.console.level', 'debug'

            args 'nogui'

            mods {
                austinpowerslanguageproviderkeepingitgroovybaby {
                    source sourceSets.main
                }
            }
        }
    }
}

compileGroovy {
    groovyOptions.optimizationOptions.indy = true
}

configurations {
    shade {}
    yeet {}
    implementation.extendsFrom(shade)
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft group: 'net.minecraftforge', name: 'forge', version: '1.17.1-37.0.1'
    shade groovy('stdlib')
    yeet groovy('ant')
    shade groovy('astbuilder')
    yeet groovy('cli-picocli')
    yeet groovy('console')
    shade groovy('datetime')
    yeet groovy('docgenerator')
    yeet groovy('groovydoc')
    yeet groovy('groovysh')
    yeet groovy('jmx')
    yeet groovy('json')
    shade groovy('jsr223')
    shade groovy('macro')
    shade groovy('nio')
    yeet groovy('servlet')
    yeet groovy('sql')
    yeet groovy('swing')
    shade groovy('templates')
    yeet groovy('test')
    yeet groovy('test-junit5')
    yeet groovy('testng')
    yeet groovy('xml')
}

jar {
    archiveClassifier = 'thin'
    manifest {
        attributes([
            "Specification-Title": "austin-powers-language-provider-keeping-it-groovy-baby",
            "Specification-Vendor": "TheSilkMiner",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": archiveVersion.get(),
            "Implementation-Vendor" : "TheSilkMiner",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "GitCommit": getGitCommit(),
            "FMLModType": "LANGPROVIDER",
            "Automatic-Module-Name": "net.thesilkminer.mc.aplpkigb"
        ])
    }
}

shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
}

reobf {
    shadowJar {}
}

jar.finalizedBy('reobfJar')
shadowJar.finalizedBy('reobfShadowJar')

shadowJar.dependsOn('reobfJar')
build.dependsOn('shadowJar')

wrapper {
    gradleVersion = '7.1'
    distributionType = Wrapper.DistributionType.ALL
}
